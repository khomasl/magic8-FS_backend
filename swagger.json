{
  "openapi": "3.0.1",
  "info": {
    "version": "1.3.0",
    "title": "Swagger for kapusta",
    "description": "Kapusta swagger documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:5000" },
    { "url": "https://kapusta-magic8.herokuapp.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    },
    {
      "name": "Stats",
      "description": "Stats endpoints"
    }
  ],

  "paths": {
    "/api/users/registration": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email is already exist",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentification",
        "parameters": [],
        "requestBody": {
          "description": "Log in's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Invalid credentials",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentification",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Log out's object",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogOutRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogOutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User authentification",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Currents's object",
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAuthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/users/verify": {
      "get": {
        "tags": ["Auth"],
        "summary": "User verification by email",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": true,
            "type": "string",
            "description": "verification token by email"
          }
        ],

        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successOperationResponse"
                }
              }
            }
          },

          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Auth"],
        "summary": "User re-verification",
        "parameters": [],
        "requestBody": {
          "description": "Repeat email for verification  object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepeatEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepeatEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "503": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/balance": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User balance",
        "parameters": [],
        "requestBody": {
          "description": "Balance object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Auth"],
        "summary": "User balance",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Currents's object",
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAuthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },

    "/api/transactions": {
      "post": {
        "tags": ["Transaction"],
        "summary": "User transaction",
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Transaction"],
        "summary": "User transactions",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Currents's object",
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsAllResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAuthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },

    "/api/stats/expense": {
      "get": {
        "tags": ["Stats"],
        "summary": "User statistics",
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": true,
            "type": "string",
            "description": "Current year"
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "type": "string",
            "description": "Current month in calendar in app"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpensesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAuthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/stats/income": {
      "get": {
        "tags": ["Stats"],
        "summary": "User statistics",
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": true,
            "type": "string",
            "description": "Current year"
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "type": "string",
            "description": "Current month in calendar in app"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAuthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/stats/detailed": {
      "get": {
        "tags": ["Stats"],
        "summary": "User statistics",
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": true,
            "type": "string",
            "description": "Current year"
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "type": "string",
            "description": "Current month in calendar in app"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAuthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RepeatEmailRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "LogOutRequest": {},
      "BalanceRequest": {
        "type": "object",
        "required": "balance",
        "properties": {
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 1100.55
          }
        }
      },
      "TransactionRequest": {
        "type": "object",
        "required": [
          "description",
          "category",
          "categoryLabel",
          "sum",
          "date",
          "year",
          "month",
          "day",
          "typeOfTransaction"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Description transaction",
            "example": "Кава"
          },
          "category": {
            "type": "string",
            "description": "Category transaction",
            "example": "foods"
          },
          "categoryLabel": {
            "type": "string",
            "description": "Category label transaction",
            "example": "ПРОДУКТИ"
          },
          "sum": {
            "type": "number",
            "description": "Summa transaction",
            "example": 150.55
          },
          "date": {
            "type": "string",
            "description": "Date transaction",
            "example": "11.02.2022"
          },
          "year": {
            "type": "string",
            "description": "Year transaction",
            "example": "2022"
          },
          "month": {
            "type": "string",
            "description": "Month transaction",
            "example": "02"
          },
          "day": {
            "type": "string",
            "description": "Day transaction",
            "example": "11"
          },
          "typeOfTransaction": {
            "type": "boolean",
            "description": "Type transaction",
            "example": false
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "61ffbac74cfa19a32e603ae1"
              },
              "email": {
                "type": "string",
                "example": "user@example.com",
                "format": "email"
              },
              "verificationEmailSend": {
                "type": "boolean",
                "example": "true"
              }
            }
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
              },
              "email": {
                "type": "string",
                "example": "user@example.com",
                "format": "email"
              }
            }
          }
        }
      },
      "LogOutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "204"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "RepeatEmailResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Verification email sent"
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "user@example.com",
                "format": "email"
              },
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                }
              }
            }
          }
        }
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "200"
          },
          "data": {
            "type": "number",
            "description": "User`s Balance",
            "example": "1100.55"
          }
        }
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "transaction": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description transaction",
                    "example": "Кава"
                  },
                  "category": {
                    "type": "string",
                    "description": "Category transaction",
                    "example": "foods"
                  },
                  "categoryLabel": {
                    "type": "string",
                    "description": "Category label transaction",
                    "example": "ПРОДУКТИ"
                  },
                  "sum": {
                    "type": "number",
                    "description": "Summa transaction",
                    "example": 150.55
                  },
                  "date": {
                    "type": "string",
                    "description": "Date transaction",
                    "example": "11.02.2022"
                  },
                  "year": {
                    "type": "string",
                    "description": "Year transaction",
                    "example": "2022"
                  },
                  "month": {
                    "type": "string",
                    "description": "Month transaction",
                    "example": "02"
                  },
                  "day": {
                    "type": "string",
                    "description": "Day transaction",
                    "example": "11"
                  },
                  "typeOfTransaction": {
                    "type": "boolean",
                    "description": "Type transaction",
                    "example": false
                  },
                  "owner": {
                    "type": "string",
                    "description": "Owner id",
                    "example": "620127666e014907c7f14946"
                  },
                  "id": {
                    "type": "string",
                    "description": "Transaction id",
                    "example": "6206b0c5f7ad745358c47d23"
                  }
                }
              }
            }
          }
        }
      },
      "TransactionsAllResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number",
                "description": "Total number of transactions",
                "example": 1
              },
              "transactions": {
                "type": "array",
                "example": [
                  {
                    "description": "Зелень-6",
                    "category": "food",
                    "sum": 50.35,
                    "date": "11.02.2022",
                    "typeOfTransaction": false,
                    "owner": "620127666e014907c7f14946",
                    "year": 2022,
                    "month": 8,
                    "day": 5,
                    "createdAt": "2022-02-11T18:53:57.936Z",
                    "updatedAt": "2022-02-11T18:53:57.936Z",
                    "id": "6206b0c5f7ad745358c47d23"
                  }
                ]
              }
            }
          }
        }
      },

      "ExpensesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "200"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "number",
                  "description": "Number of month",
                  "example": 2
                },
                "month": {
                  "type": "string",
                  "description": "Name of month",
                  "example": "ЛЮТИЙ"
                },
                "totalExpense": {
                  "type": "number",
                  "description": "Total summa",
                  "example": 16361.48
                }
              }
            },

            "example": [
              {
                "_id": 2,
                "month": "БЕРЕЗЕНЬ",
                "totalExpense": 43850.76
              },
              {
                "_id": 1,
                "month": "ЛЮТИЙ",
                "totalExpense": 16361.48
              },
              {
                "_id": 0,
                "month": "СІЧЕНЬ",
                "totalExpense": 11840.41
              }
            ]
          }
        }
      },
      "IncomesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "200"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "number",
                  "description": "Number of month",
                  "example": 2
                },
                "month": {
                  "type": "string",
                  "description": "Name of month",
                  "example": "ЛЮТИЙ"
                },
                "totalIncome": {
                  "type": "number",
                  "description": "Total summa",
                  "example": 16361.48
                }
              }
            },

            "example": [
              {
                "_id": 2,
                "month": "БЕРЕЗЕНЬ",
                "totalIncome": 43850.76
              },
              {
                "_id": 1,
                "month": "ЛЮТИЙ",
                "totalIncome": 16361.48
              },
              {
                "_id": 0,
                "month": "СІЧЕНЬ",
                "totalIncome": 11840.41
              }
            ]
          }
        }
      },
      "DetailedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "totalExpInc": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "boolean",
                      "description": "typeOfTransaction",
                      "example": false
                    },
                    "total": {
                      "type": "number",
                      "description": "Total summa",
                      "example": 2781.22
                    }
                  }
                }
              },
              "detailedCategoryStatistic": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "typeOfTransaction": false,
                      "category": "transport",
                      "categoryLabel": "ТРАНСПОРТ"
                    },
                    "total": {
                      "type": "number",
                      "description": "Total summa",
                      "example": 2345.55
                    }
                  }
                }
              },
              "detailedDescriptionStatistic": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "typeOfTransaction": true,
                      "description": "Жена",
                      "category": "addIncome"
                    },
                    "total": {
                      "type": "number",
                      "description": "Total summa",
                      "example": 2345.55
                    }
                  }
                }
              }
            },
            "example": {
              "totalExpInc": [
                {
                  "_id": false,
                  "total": 2781.22
                },
                {
                  "_id": true,
                  "total": 9712.52
                }
              ],
              "detailedCategoryStatistic": [
                {
                  "_id": {
                    "typeOfTransaction": false,
                    "category": "transport",
                    "categoryLabel": "ТРАНСПОРТ"
                  },
                  "total": 2345.55
                },
                {
                  "_id": {
                    "typeOfTransaction": true,
                    "category": "addIncome",
                    "categoryLabel": "Дод. дох."
                  },
                  "total": 9712.52
                },
                {
                  "_id": {
                    "typeOfTransaction": false,
                    "category": "alcohol",
                    "categoryLabel": "АЛКОГОЛЬ"
                  },
                  "total": 435.67
                }
              ],
              "detailedDescriptionStatistic": [
                {
                  "_id": {
                    "typeOfTransaction": true,
                    "description": "Жена",
                    "category": "addIncome"
                  },
                  "total": 5008
                },
                {
                  "_id": {
                    "typeOfTransaction": true,
                    "description": "Мій",
                    "category": "addIncome"
                  },
                  "total": 4704
                },
                {
                  "_id": {
                    "typeOfTransaction": false,
                    "description": "Зап. частини",
                    "category": "transport"
                  },
                  "total": 2346
                },
                {
                  "_id": {
                    "typeOfTransaction": false,
                    "description": "Горілка",
                    "category": "alcohol"
                  },
                  "total": 436
                }
              ]
            }
          }
        }
      },

      "NotAuthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "stribg",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request"
          },
          "data": {
            "type": "object"
          }
        },
        "example": {
          "status": "error",
          "code": 409,
          "message": "Not authorized"
        }
      },
      "successOperationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Status of request",
            "example": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Success"
              }
            }
          }
        }
      },
      "ServiceUnavailable": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "example": "503"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "User with this email not found"
              }
            }
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
